/*
 * Copyright 2017 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.testcoverage.regression;

import org.drools.testcoverage.common.model.*;

rule "Rebate"
	when
		$s: Sale( $amount : amount >= 1000, rebated == false, $cid : custid )
		$c: Customer( custid == $cid )
	then
		modify ($s) {
			setDiscount($s.getDiscount() + (int)($amount * 0.05) ),
			setRebated();
		}
		modify ($c) {
			incrementSales();
		}
		//System.out.println("REBATE: " + $s);
end

rule "No rebate"
	when
		$s: Sale( $amount : amount < 1000, rebated == false, $cid : custid )
		$c: Customer( custid == $cid )
	then
		modify ($s) {
			setRebated();
		}
		modify ($c) {
			incrementSales();
		}
		//System.out.println("NO_REBATE: " + $s);
end

rule "3rd sale"
	when
		$c: Customer( eval(sales % 3 == 0 && sales != 0), tenthSaleFree == true, $cid : custid)
		$s: Sale( custid == $cid )
	then
		modify ($s) {
			setDiscount( $s.getDiscount() + 10 );
		}
		modify ($c) {
			setTenthSaleFree(false);
		}
		//System.out.println("3RD BUY: " + $s);
end

rule "after 3rd sale"
	when
		$c: Customer( eval(sales % 3 == 1 && sales != 1), tenthSaleFree == false)
	then
		modify( $c ){ setTenthSaleFree(true); }
end

rule "Print customer"
salience -100
	when
		$c: Customer()
	then
		//System.out.println("CUSTOMER: " + $c);
end

rule "Print sales"
salience -101
	when
		$s: Sale()
	then
		//System.out.println("SALE: " + $s);
end